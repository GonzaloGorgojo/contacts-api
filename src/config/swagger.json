{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts Api",
    "description": "This is a Typescript-Express Rest CRUD api with clean architecture",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "Contacts",
      "description": "API for contacts"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/contacts": {
      "get": {
        "tags": ["Get Contacts"],
        "summary": "Get all contacts in db",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contacts"
            }
          }
        }
      }
    },
    "/contact/{name}": {
      "get": {
        "tags": ["Get One Contact"],
        "summary": "Get contact with given Name",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "description": "Contact with name"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "404": {
            "description": "Bad Request. Cat not found."
          }
        }
      }
    },
    "/create-contact": {
      "post": {
        "tags": ["Create Contact"],
        "summary": "Create a new contact",
        "requestBody": {
          "description": "Contact Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        },
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Contact created successfully",
            "schema": {
              "$ref": "#/definitions/CreateContactResponse"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/contact/{number}": {
      "put": {
        "summary": "Update contact with given number",
        "tags": ["Update Contact"],
        "requestBody": {
          "description": "Contact Object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Contact"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "required": true,
            "description": "Contact with new values of properties"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Bad Request. Bad post data."
          }
        }
      },
      "delete": {
        "summary": "Delete Contact with given number",
        "tags": ["Delete Contact"],
        "parameters": [
          {
            "in": "path",
            "name": "number",
            "required": true,
            "description": "Delete Contact with number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "404": {
            "description": "Bad Request. Cat not found."
          }
        }
      }
    }
  },
  "definitions": {
    "CreateContactResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "Contact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 15
        },
        "lastName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 15
        },
        "address": {
          "type": "string",
          "minLength": 4,
          "maxLength": 50
        },
        "number": {
          "type": "string",
          "minLength": 8,
          "maxLength": 20
        }
      }
    },
    "Contacts": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Contact"
          }
        }
      }
    }
  }
}
